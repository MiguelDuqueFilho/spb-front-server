generator client {
  provider        = "prisma-client-js"
  binaryTargets   = ["native", "linux-musl"]
  previewFeatures = ["filteredRelationCount"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  hash      String
  firstName String?
  lastname  String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt()

  @@map("users")
}

model FileEntity {
  id           Int      @id @default(autoincrement())
  originalName String
  bucket       String
  key          String   @unique
  mimeType     String
  size         Int
  url          String
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  @@map("FilesEntity")
}

model GrupoServico {
  GrpServico String   @id @db.VarChar(15)
  Descricao  String   @db.VarChar(255)
  Eventos    Evento[]
  createdAt  DateTime @default(now())
  updateAt   DateTime @updatedAt

  @@map(name: "GrupoServicos")
}

model Evento {
  CodEvento    String        @id @db.VarChar(15)
  NomeEvento   String?       @db.VarChar(255)
  Fluxo        String        @db.VarChar(10)
  GrupoServico GrupoServico? @relation(fields: [GrpServicoId], references: [GrpServico])
  GrpServicoId String?       @db.VarChar(15)
  IsConvert    Boolean       @default(false)
  EventJson    Json          @default("[]")
  Mensagens    Mensagem[]
  createdAt    DateTime      @default(now())
  updateAt     DateTime      @updatedAt

  @@map(name: "Eventos")
}

model Mensagem {
  CodMsg          String   @id @db.VarChar(15)
  Tag             String   @db.VarChar(255)
  Descricao       String   @db.VarChar(255)
  EntidadeOrigem  String   @db.VarChar(50)
  EntidadeDestino String   @db.VarChar(50)
  Eventos         Evento?  @relation(fields: [CodEventoId], references: [CodEvento])
  CodEventoId     String   @db.VarChar(15)
  createdAt       DateTime @default(now())
  updateAt        DateTime @updatedAt

  @@map(name: "Mensagens")
}

model NewMessage {
  id         Int      @id @default(autoincrement())
  codMsg     String   @db.VarChar(15)
  xmlMessage String   @db.Xml
  process    String   @default("PENDING") // PROCESSING - COMPLETED
  status     String   @default("VALIDATED") // ERROR
  error      String?
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt()

  @@map(name: "NewMessages")
}
